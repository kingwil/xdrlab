{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.63.48766",
      "templateHash": "11245345589663317196"
    }
  },
  "functions": [],
  "variables": {
    "rgName": "XDR-LAB",
    "location": "westeurope"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[variables('rgName')]",
      "location": "[variables('location')]"
    },
    {
      "type": "Microsoft.Security/pricings",
      "apiVersion": "2018-06-01",
      "name": "VirtualMachines",
      "properties": {
        "pricingTier": "Standard"
      }
    },
    {
      "type": "Microsoft.Security/pricings",
      "apiVersion": "2018-06-01",
      "name": "SqlServers",
      "properties": {
        "pricingTier": "Standard"
      }
    },
    {
      "type": "Microsoft.Security/pricings",
      "apiVersion": "2018-06-01",
      "name": "AppServices",
      "properties": {
        "pricingTier": "Standard"
      }
    },
    {
      "type": "Microsoft.Security/pricings",
      "apiVersion": "2018-06-01",
      "name": "StorageAccounts",
      "properties": {
        "pricingTier": "Standard"
      }
    },
    {
      "type": "Microsoft.Security/pricings",
      "apiVersion": "2018-06-01",
      "name": "SqlServerVirtualMachines",
      "properties": {
        "pricingTier": "Standard"
      }
    },
    {
      "type": "Microsoft.Security/pricings",
      "apiVersion": "2018-06-01",
      "name": "KubernetesService",
      "properties": {
        "pricingTier": "Standard"
      }
    },
    {
      "type": "Microsoft.Security/pricings",
      "apiVersion": "2018-06-01",
      "name": "ContainerRegistry",
      "properties": {
        "pricingTier": "Standard"
      }
    },
    {
      "type": "Microsoft.Security/pricings",
      "apiVersion": "2018-06-01",
      "name": "KeyVaults",
      "properties": {
        "pricingTier": "Standard"
      }
    },
    {
      "type": "Microsoft.Security/pricings",
      "apiVersion": "2018-06-01",
      "name": "Dns",
      "properties": {
        "pricingTier": "Standard"
      }
    },
    {
      "type": "Microsoft.Security/pricings",
      "apiVersion": "2018-06-01",
      "name": "Arm",
      "properties": {
        "pricingTier": "Standard"
      }
    },
    {
      "type": "Microsoft.Security/pricings",
      "apiVersion": "2018-06-01",
      "name": "OpenSourceRelationalDatabases",
      "properties": {
        "pricingTier": "Standard"
      }
    },
    {
      "type": "Microsoft.Security/workspaceSettings",
      "apiVersion": "2017-08-01-preview",
      "name": "default",
      "properties": {
        "scope": "[subscription().id]",
        "workspaceId": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'xdr-resource'), '2019-10-01').outputs.la_workspace_resourceId.value]"
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'xdr-resource')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "xdr-resource",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.63.48766",
              "templateHash": "3089110972948882362"
            }
          },
          "parameters": {
            "AdminPassword": {
              "type": "secureString",
              "defaultValue": "Pass@w0rd$$$",
              "metadata": {
                "description": "Password for the Jump and Workstation VMs"
              }
            },
            "AdminUser": {
              "type": "string",
              "defaultValue": "LabAdmin",
              "metadata": {
                "description": "The defualt username for the administrator user"
              }
            },
            "VMSize": {
              "type": "string",
              "defaultValue": "Standard_D2s_v3",
              "metadata": {
                "description": "Virtual Machine Size"
              }
            },
            "id": {
              "type": "string",
              "defaultValue": "[take(uniqueString('subscription'), 5)]"
            }
          },
          "functions": [],
          "variables": {
            "vm_dc1_nic_name": "srv-dc1-nic",
            "vm_srv1_nic_name": "srv-app1-nic",
            "vm_pc1_nic_name": "pc-01-nic",
            "vm_pc2_nic_name": "pc-02-nic",
            "vm_dc1_name": "srv-dc1",
            "vm_srv1_name": "srv-app1",
            "vm_pc1_name": "pc-01",
            "vm_pc2_name": "pc-02",
            "vnet_name": "test-vnet",
            "pip_name": "bastion-pip",
            "subnet_name": "tier0-subnet",
            "dc_ip": "10.0.2.100",
            "srv1_ip": "10.0.2.101",
            "bastion_name": "xdr-bastion"
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2020-11-01",
              "name": "[variables('pip_name')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "publicIPAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4"
              },
              "sku": {
                "name": "Standard"
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks/subnets",
              "apiVersion": "2020-04-01",
              "name": "[format('{0}/{1}', variables('vnet_name'), variables('subnet_name'))]",
              "properties": {
                "addressPrefix": "10.0.2.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet_name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2020-04-01",
              "name": "[variables('vnet_name')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "10.0.0.0/16"
                  ]
                },
                "dhcpOptions": {
                  "dnsServers": [
                    "[variables('dc_ip')]",
                    "168.63.129.16"
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks/subnets",
              "apiVersion": "2020-04-01",
              "name": "[format('{0}/AzureBastionSubnet', variables('vnet_name'))]",
              "properties": {
                "addressPrefix": "10.0.0.0/27"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', split(format('{0}/{1}', variables('vnet_name'), variables('subnet_name')), '/')[0], split(format('{0}/{1}', variables('vnet_name'), variables('subnet_name')), '/')[1])]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet_name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/bastionHosts",
              "apiVersion": "2020-07-01",
              "name": "[variables('bastion_name')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "ipConfigurations": [
                  {
                    "properties": {
                      "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', split(format('{0}/AzureBastionSubnet', variables('vnet_name')), '/')[0], split(format('{0}/AzureBastionSubnet', variables('vnet_name')), '/')[1])]"
                      },
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pip_name'))]"
                      },
                      "privateIPAllocationMethod": "Dynamic"
                    },
                    "name": "bastionIpConf"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('pip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', split(format('{0}/AzureBastionSubnet', variables('vnet_name')), '/')[0], split(format('{0}/AzureBastionSubnet', variables('vnet_name')), '/')[1])]"
              ]
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2020-04-01",
              "name": "[variables('vm_dc1_nic_name')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAddress": "[variables('dc_ip')]",
                      "privateIPAllocationMethod": "Static",
                      "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', split(format('{0}/{1}', variables('vnet_name'), variables('subnet_name')), '/')[0], split(format('{0}/{1}', variables('vnet_name'), variables('subnet_name')), '/')[1])]"
                      },
                      "primary": true,
                      "privateIPAddressVersion": "IPv4"
                    }
                  }
                ],
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', split(format('{0}/{1}', variables('vnet_name'), variables('subnet_name')), '/')[0], split(format('{0}/{1}', variables('vnet_name'), variables('subnet_name')), '/')[1])]"
              ]
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2020-04-01",
              "name": "[variables('vm_srv1_nic_name')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAddress": "[variables('srv1_ip')]",
                      "privateIPAllocationMethod": "Static",
                      "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', split(format('{0}/{1}', variables('vnet_name'), variables('subnet_name')), '/')[0], split(format('{0}/{1}', variables('vnet_name'), variables('subnet_name')), '/')[1])]"
                      },
                      "primary": true,
                      "privateIPAddressVersion": "IPv4"
                    }
                  }
                ],
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', split(format('{0}/{1}', variables('vnet_name'), variables('subnet_name')), '/')[0], split(format('{0}/{1}', variables('vnet_name'), variables('subnet_name')), '/')[1])]"
              ]
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2020-04-01",
              "name": "[variables('vm_pc1_nic_name')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', split(format('{0}/{1}', variables('vnet_name'), variables('subnet_name')), '/')[0], split(format('{0}/{1}', variables('vnet_name'), variables('subnet_name')), '/')[1])]"
                      },
                      "primary": true,
                      "privateIPAddressVersion": "IPv4"
                    }
                  }
                ],
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', split(format('{0}/{1}', variables('vnet_name'), variables('subnet_name')), '/')[0], split(format('{0}/{1}', variables('vnet_name'), variables('subnet_name')), '/')[1])]"
              ]
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2020-04-01",
              "name": "[variables('vm_pc2_nic_name')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', split(format('{0}/{1}', variables('vnet_name'), variables('subnet_name')), '/')[0], split(format('{0}/{1}', variables('vnet_name'), variables('subnet_name')), '/')[1])]"
                      },
                      "primary": true,
                      "privateIPAddressVersion": "IPv4"
                    }
                  }
                ],
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', split(format('{0}/{1}', variables('vnet_name'), variables('subnet_name')), '/')[0], split(format('{0}/{1}', variables('vnet_name'), variables('subnet_name')), '/')[1])]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2019-07-01",
              "name": "[variables('vm_dc1_name')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('VMSize')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2019-datacenter-gensecond",
                    "version": "latest"
                  },
                  "osDisk": {
                    "osType": "Windows",
                    "name": "[format('{0}_OsDisk', variables('vm_dc1_name'))]",
                    "createOption": "FromImage",
                    "caching": "ReadWrite",
                    "managedDisk": {
                      "storageAccountType": "Premium_LRS"
                    }
                  },
                  "dataDisks": []
                },
                "osProfile": {
                  "computerName": "[variables('vm_dc1_name')]",
                  "adminUsername": "[parameters('AdminUser')]",
                  "adminPassword": "[parameters('AdminPassword')]",
                  "windowsConfiguration": {
                    "provisionVMAgent": true,
                    "enableAutomaticUpdates": true
                  },
                  "secrets": [],
                  "allowExtensionOperations": true
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vm_dc1_nic_name'))]"
                    }
                  ]
                },
                "licenseType": "Windows_Server"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('vm_dc1_nic_name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2019-07-01",
              "name": "[variables('vm_srv1_name')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('VMSize')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2019-datacenter-gensecond",
                    "version": "latest"
                  },
                  "osDisk": {
                    "osType": "Windows",
                    "name": "[format('{0}_OsDisk', variables('vm_srv1_name'))]",
                    "createOption": "FromImage",
                    "caching": "ReadWrite",
                    "managedDisk": {
                      "storageAccountType": "Premium_LRS"
                    }
                  },
                  "dataDisks": []
                },
                "osProfile": {
                  "computerName": "[variables('vm_srv1_name')]",
                  "adminUsername": "[parameters('AdminUser')]",
                  "adminPassword": "[parameters('AdminPassword')]",
                  "windowsConfiguration": {
                    "provisionVMAgent": true,
                    "enableAutomaticUpdates": true
                  },
                  "secrets": [],
                  "allowExtensionOperations": true
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vm_srv1_nic_name'))]"
                    }
                  ]
                },
                "licenseType": "Windows_Server"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('vm_srv1_nic_name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2019-07-01",
              "name": "[variables('vm_pc1_name')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('VMSize')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsDesktop",
                    "offer": "Windows-10",
                    "sku": "20h2-ent-g2",
                    "version": "latest"
                  },
                  "osDisk": {
                    "osType": "Windows",
                    "name": "[format('{0}_OsDisk', variables('vm_pc1_name'))]",
                    "createOption": "FromImage",
                    "caching": "ReadWrite",
                    "managedDisk": {
                      "storageAccountType": "Premium_LRS"
                    }
                  },
                  "dataDisks": []
                },
                "osProfile": {
                  "computerName": "[variables('vm_pc1_name')]",
                  "adminUsername": "[parameters('AdminUser')]",
                  "adminPassword": "[parameters('AdminPassword')]",
                  "windowsConfiguration": {
                    "provisionVMAgent": true,
                    "enableAutomaticUpdates": true
                  },
                  "secrets": [],
                  "allowExtensionOperations": true
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vm_pc1_nic_name'))]"
                    }
                  ]
                },
                "licenseType": "Windows_Client"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('vm_pc1_nic_name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2019-07-01",
              "name": "[variables('vm_pc2_name')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('VMSize')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsDesktop",
                    "offer": "Windows-10",
                    "sku": "20h2-ent-g2",
                    "version": "latest"
                  },
                  "osDisk": {
                    "osType": "Windows",
                    "name": "[format('{0}_OsDisk', variables('vm_pc2_name'))]",
                    "createOption": "FromImage",
                    "caching": "ReadWrite",
                    "managedDisk": {
                      "storageAccountType": "Premium_LRS"
                    }
                  },
                  "dataDisks": []
                },
                "osProfile": {
                  "computerName": "[variables('vm_pc2_name')]",
                  "adminUsername": "[parameters('AdminUser')]",
                  "adminPassword": "[parameters('AdminPassword')]",
                  "windowsConfiguration": {
                    "provisionVMAgent": true,
                    "enableAutomaticUpdates": true
                  },
                  "secrets": [],
                  "allowExtensionOperations": true
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vm_pc2_nic_name'))]"
                    }
                  ]
                },
                "licenseType": "Windows_Client"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('vm_pc2_nic_name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2020-12-01",
              "name": "[format('{0}/Microsoft.Powershell.DSC', variables('vm_dc1_name'))]",
              "location": "[resourceGroup().location]",
              "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.83",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "configuration": {
                    "url": "https://github.com/kingwil/xdrlab/raw/main/Sources/DSC/config-adds.ps1.zip",
                    "script": "config-adds.ps1",
                    "function": "config-adds"
                  }
                },
                "protectedSettings": {
                  "configurationArguments": {
                    "Credential": {
                      "userName": "[parameters('AdminUser')]",
                      "password": "[parameters('AdminPassword')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', variables('vm_dc1_name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2015-06-15",
              "name": "[format('{0}/JoinDomain', variables('vm_srv1_name'))]",
              "location": "[resourceGroup().location]",
              "properties": {
                "publisher": "Microsoft.Compute",
                "type": "JsonADDomainExtension",
                "typeHandlerVersion": "1.3",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "Name": "contoso.com",
                  "User": "[format('CONTOSO\\{0}', parameters('AdminUser'))]",
                  "Restart": true,
                  "Options": 3
                },
                "protectedSettings": {
                  "Password": "[parameters('AdminPassword')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/extensions', split(format('{0}/Microsoft.Powershell.DSC', variables('vm_dc1_name')), '/')[0], split(format('{0}/Microsoft.Powershell.DSC', variables('vm_dc1_name')), '/')[1])]",
                "[resourceId('Microsoft.Compute/virtualMachines', variables('vm_srv1_name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2015-06-15",
              "name": "[format('{0}/JoinDomain', variables('vm_pc1_name'))]",
              "location": "[resourceGroup().location]",
              "properties": {
                "publisher": "Microsoft.Compute",
                "type": "JsonADDomainExtension",
                "typeHandlerVersion": "1.3",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "Name": "contoso.com",
                  "User": "[format('CONTOSO\\{0}', parameters('AdminUser'))]",
                  "Restart": true,
                  "Options": 3
                },
                "protectedSettings": {
                  "Password": "[parameters('AdminPassword')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/extensions', split(format('{0}/Microsoft.Powershell.DSC', variables('vm_dc1_name')), '/')[0], split(format('{0}/Microsoft.Powershell.DSC', variables('vm_dc1_name')), '/')[1])]",
                "[resourceId('Microsoft.Compute/virtualMachines', variables('vm_pc1_name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2015-06-15",
              "name": "[format('{0}/JoinDomain', variables('vm_pc2_name'))]",
              "location": "[resourceGroup().location]",
              "properties": {
                "publisher": "Microsoft.Compute",
                "type": "JsonADDomainExtension",
                "typeHandlerVersion": "1.3",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "Name": "contoso.com",
                  "User": "[format('CONTOSO\\{0}', parameters('AdminUser'))]",
                  "Restart": true,
                  "Options": 3
                },
                "protectedSettings": {
                  "Password": "[parameters('AdminPassword')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/extensions', split(format('{0}/Microsoft.Powershell.DSC', variables('vm_dc1_name')), '/')[0], split(format('{0}/Microsoft.Powershell.DSC', variables('vm_dc1_name')), '/')[1])]",
                "[resourceId('Microsoft.Compute/virtualMachines', variables('vm_pc2_name'))]"
              ]
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2020-10-01",
              "name": "[format('xdr{0}', parameters('id'))]",
              "location": "[resourceGroup().location]",
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                }
              }
            },
            {
              "type": "Microsoft.OperationsManagement/solutions",
              "apiVersion": "2015-11-01-preview",
              "name": "[format('SecurityInsights({0})', format('xdr{0}', parameters('id')))]",
              "location": "[resourceGroup().location]",
              "plan": {
                "name": "SecurityInsights",
                "product": "OMSGallery/SecurityInsights",
                "publisher": "Microsoft",
                "promotionCode": ""
              },
              "properties": {
                "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', format('xdr{0}', parameters('id')))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', format('xdr{0}', parameters('id')))]"
              ]
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/dataSources",
              "apiVersion": "2020-08-01",
              "name": "[format('{0}/SecurityInsightsSecurityEventCollectionConfiguration', format('xdr{0}', parameters('id')))]",
              "kind": "SecurityInsightsSecurityEventCollectionConfiguration",
              "properties": {
                "tier": "All",
                "tierSetMethod": "Custom"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', format('xdr{0}', parameters('id')))]",
                "[resourceId('Microsoft.OperationsManagement/solutions', format('SecurityInsights({0})', format('xdr{0}', parameters('id'))))]"
              ]
            },
            {
              "type": "Microsoft.OperationsManagement/solutions",
              "apiVersion": "2015-11-01-preview",
              "name": "[format('Updates({0})', format('xdr{0}', parameters('id')))]",
              "location": "[resourceGroup().location]",
              "plan": {
                "name": "Updates",
                "product": "OMSGallery/Updates",
                "publisher": "Microsoft",
                "promotionCode": ""
              },
              "properties": {
                "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', format('xdr{0}', parameters('id')))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', format('xdr{0}', parameters('id')))]"
              ]
            },
            {
              "type": "Microsoft.OperationsManagement/solutions",
              "apiVersion": "2015-11-01-preview",
              "name": "[format('ChangeTracking({0})', format('xdr{0}', parameters('id')))]",
              "location": "[resourceGroup().location]",
              "plan": {
                "name": "ChangeTracking",
                "product": "OMSGallery/ChangeTracking",
                "publisher": "Microsoft",
                "promotionCode": ""
              },
              "properties": {
                "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', format('xdr{0}', parameters('id')))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', format('xdr{0}', parameters('id')))]"
              ]
            }
          ],
          "outputs": {
            "la_workspace_resourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', format('xdr{0}', parameters('id')))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]"
      ]
    }
  ]
}